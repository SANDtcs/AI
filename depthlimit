graph = [[1, 2], [2, 4], [1, 4], [3, 4], [3, 5], [2, 6], [3, 6], [4, 5], [5, 6]]
l = 2

source = 1
dest = 5
stack = [[source, 0, -1]]
path = [[source, 0, -1]]
count = 0

while len(stack) > 0 and stack[-1][0] != dest:
    temp = stack[-1]
    del stack[-1]

    if temp[1] >= l:
        continue

    for edge in graph:
        if edge[0] == temp[0]:
            count += 1
            stack.append([edge[1], temp[1] + 1, edge[0]])
            path.append([edge[1], temp[1] + 1, edge[0]])

print(path)
if path[-1][0] == dest:
    route = []
    route.append(dest)
    route.append(path[-1][2])
    del path[-1]
    path.reverse()
    for edge in path:
        if edge[0] == route[-1]:
            route.append(edge[2])

    del route[-1]
    route.reverse()

print(route)
